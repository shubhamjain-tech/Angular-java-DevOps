pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = 'ap-south-1'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()  // Cleans the workspace before starting a new build
            }
        }

        stage('Pull Code') {
            steps {
                git branch: 'main', url: 'https://github.com/shubhamjain-tech/Angular-java-DevOps.git'
            }
        }

        stage('Build Backend') {
            steps {
                dir('angular-backend') {  
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                dir('angular-backend') {
                    withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS-CRED', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                        sh '''
                            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 396608779627.dkr.ecr.ap-south-1.amazonaws.com
                            docker build -t angular-backend:v1 .
                            docker tag angular-backend:latest 396608779627.dkr.ecr.ap-south-1.amazonaws.com/angular-backend:v1
                            docker push 396608779627.dkr.ecr.ap-south-1.amazonaws.com/angular-backend:v1
            
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'AWS-CRED', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh '''
                        pwd
                        kubectl apply -f angular-backend/yaml/
                    '''
                }
            }
        }
    }
}
